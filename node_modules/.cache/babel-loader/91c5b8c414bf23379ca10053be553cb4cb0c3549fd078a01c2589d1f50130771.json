{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zey\\\\Desktop\\\\Kasa-master\\\\src\\\\components\\\\ratingstars.jsx\";\n// ratingstars.jsx\n\nimport React from 'react';\nimport location from \"../locations.json\";\nimport \"./RatingStars.css\"; // Assuming you have a separate CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingStars = ({\n  rating\n}) => {\n  // Convert rating to a number\n  const ratingNumber = parseInt(location.rating);\n\n  // Array to store JSX elements representing stars\n  const stars = [];\n\n  // Loop to create the number of stars based on the rating\n  for (let i = 0; i < 5; i++) {\n    // Determine if the current star should be colored\n    const isColored = i < ratingNumber;\n\n    // Create the JSX element for the star with dynamic color based on rating\n    stars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `star ${isColored ? 'red' : ''}`,\n      children: \"\\u2605\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rating-stars\",\n    children: stars\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_c = RatingStars;\nexport default RatingStars;\nvar _c;\n$RefreshReg$(_c, \"RatingStars\");","map":{"version":3,"names":["React","location","jsxDEV","_jsxDEV","RatingStars","rating","ratingNumber","parseInt","stars","i","isColored","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zey/Desktop/Kasa-master/src/components/ratingstars.jsx"],"sourcesContent":["// ratingstars.jsx\r\n\r\nimport React from 'react';\r\nimport location from \"../locations.json\";\r\nimport \"./RatingStars.css\"; // Assuming you have a separate CSS file for styling\r\n\r\nconst RatingStars = ({ rating }) => {\r\n    // Convert rating to a number\r\n    const ratingNumber = parseInt(location.rating);\r\n\r\n    // Array to store JSX elements representing stars\r\n    const stars = [];\r\n\r\n    // Loop to create the number of stars based on the rating\r\n    for (let i = 0; i < 5; i++) {\r\n        // Determine if the current star should be colored\r\n        const isColored = i < ratingNumber;\r\n\r\n        // Create the JSX element for the star with dynamic color based on rating\r\n        stars.push(\r\n            <div className={`star ${isColored ? 'red' : ''}`} key={i}>\r\n                â˜…\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <div className=\"rating-stars\">{stars}</div>;\r\n};\r\n\r\nexport default RatingStars;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChC;EACA,MAAMC,YAAY,GAAGC,QAAQ,CAACN,QAAQ,CAACI,MAAM,CAAC;;EAE9C;EACA,MAAMG,KAAK,GAAG,EAAE;;EAEhB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxB;IACA,MAAMC,SAAS,GAAGD,CAAC,GAAGH,YAAY;;IAElC;IACAE,KAAK,CAACG,IAAI,eACNR,OAAA;MAAKS,SAAS,EAAG,QAAOF,SAAS,GAAG,KAAK,GAAG,EAAG,EAAE;MAAAG,QAAA,EAAS;IAE1D,GAFuDJ,CAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnD,CACT,CAAC;EACL;EAEA,oBAAOd,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,EAAEL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACtD,CAAC;AAACC,EAAA,GArBId,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}